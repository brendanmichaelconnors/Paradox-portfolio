points(log(out$S[,i]),type="l")
}
log(50)
ny = 50
phi <- 0.6
rho <- 0.6
episd <- 0.8
Preturn <- c(0,0,1,0)
for.error <- 0.1
OU <- 0
control <- 0
MSY.add <- 1
source("MSY_hcr_function.R")
out <- process(ny, Ro, rho, phi, Preturn, U, alpha, beta, control, MSY.add, for.error)
plot(log(out$S[,1]),type="l",ylim=c(0,max(log(out$S))))
for(i in 1:pops){
points(log(out$S[,i]),type="l")
}
alpha
install.packages("viridis")
library(viridis)
## Load functions and libraries for analysis
source("functions_PC.R")
library(MASS)
library(reshape)
library(mvtnorm)
library(gsl)
library(gdata)
library(graphics)
library(fields)
library(dichromat)
library(ggplot2)
library(gridExtra)
library(ggpubr)
library(viridis)
mean_out <-readRDS(file = "output/richness_sync_200_0.8_0.6_0010_0.15_0_heteroP2.27Dec2018")
max.catch_hetP_2 <- c(max(mean_out[1,,2]),max(mean_out[2,,2]),max(mean_out[3,,2]),max(mean_out[4,,2]),max(mean_out[5,,2]),max(mean_out[6,,2]),max(mean_out[7,,2]),max(mean_out[8,,2]),max(mean_out[9,,2]),max(mean_out[10,,2]))
max.catch <- cbind(max.catch_hetP_2,max.catch_hetP_2,max.catch_hetP_2,max.catch_hetP_2,max.catch_hetP_2,max.catch_hetP_2,max.catch_hetP_2,max.catch_hetP_2,max.catch_hetP_2,max.catch_hetP_2)
min_cor=0
dev.new(width=6, height=5,new=FALSE)
par(mfrow=c(2,2),bty="o", mar=c(3,3,2.5,5),oma=c(2,2,1,1))#set dimensions to plots
long.data <- as.data.frame(as.table((mean_out[,,2]/max.catch)*100))
x <- as.numeric(paste(long.data[,1]))+0.00000001
y <- as.numeric(paste(long.data[,2]))+0.00000001
z <-as.numeric(long.data[,3])
data.loess.decline.10 = loess(z~x*y)
grid = expand.grid(list(x = seq(6,31,length.out=100), y = seq(min_cor,1,length.out=100)))
zz<-as.matrix(predict(data.loess.decline.10, newdata = grid))
xx<-seq(6,31,length.out=100)
yy<-seq(min_cor,1,length.out=100)
image(xx,yy,zz,axes=F,ylab="",xlab="")
axis(2,las=2,cex.axis=0.9)
axis(1,at=c(6,11,16,21,26,31),cex.axis=0.9)
mtext("Yield (% max. harvest)",3,cex=0.9,line=0.5)
mtext("A",3,cex=1.2,line=0.5,adj=-0.25,font=2)
mtext("Synchrony",2,line=2.5)
image.plot(xx,yy,zz,axes=F,add=T,legend.mar=3,col = rev(viridis()))
image.plot(xx,yy,zz,axes=F,add=T,legend.mar=3,col = rev(viridis(length.out = n))))
image.plot(xx,yy,zz,axes=F,add=T,legend.mar=3,col = rev(viridis(length.out = n)))
image.plot(xx,yy,zz,axes=F,add=T,legend.mar=3,col = rev(viridis(length.out = 10))
image.plot(xx,yy,zz,axes=F,add=T,legend.mar=3,col = rev(viridis(length.out = 10)))
viridis(length.out = 10)
viridis
tim.colors()
viridis(1,100,length.out = 10)
virdis(256)
viridis(256)
image.plot(xx,yy,zz,axes=F,add=T,legend.mar=3,col = rev(viridis(100)))
image.plot(xx,yy,zz,axes=F,add=T,legend.mar=3,col = rev(viridis(100)))
image.plot(xx,yy,zz,axes=F,add=T,legend.mar=3,col = rev(viridis(10))
image.plot(xx,yy,zz,axes=F,add=T,legend.mar=3,col = rev(viridis(10)))
long.data <- as.data.frame(as.table(1/mean_out[,,6]))
dev.new(width=6, height=5,new=FALSE)
par(mfrow=c(2,2),bty="o", mar=c(3,3,2.5,5),oma=c(2,2,1,1))#set dimensions to plots
long.data <- as.data.frame(as.table((mean_out[,,2]/max.catch)*100))
x <- as.numeric(paste(long.data[,1]))+0.00000001
y <- as.numeric(paste(long.data[,2]))+0.00000001
z <-as.numeric(long.data[,3])
data.loess.decline.10 = loess(z~x*y)
grid = expand.grid(list(x = seq(6,31,length.out=100), y = seq(min_cor,1,length.out=100)))
zz<-as.matrix(predict(data.loess.decline.10, newdata = grid))
xx<-seq(6,31,length.out=100)
yy<-seq(min_cor,1,length.out=100)
image(xx,yy,zz,axes=F,ylab="",xlab="")
axis(2,las=2,cex.axis=0.9)
axis(1,at=c(6,11,16,21,26,31),cex.axis=0.9)
mtext("Yield (% max. harvest)",3,cex=0.9,line=0.5)
mtext("A",3,cex=1.2,line=0.5,adj=-0.25,font=2)
mtext("Synchrony",2,line=2.5)
image.plot(xx,yy,zz,axes=F,add=T,legend.mar=3,col = rev(viridis(10)))
dev.new(width=6, height=5,new=FALSE)
par(mfrow=c(2,2),bty="o", mar=c(3,3,2.5,5),oma=c(2,2,1,1))#set dimensions to plots
long.data <- as.data.frame(as.table((mean_out[,,2]/max.catch)*100))
x <- as.numeric(paste(long.data[,1]))+0.00000001
y <- as.numeric(paste(long.data[,2]))+0.00000001
z <-as.numeric(long.data[,3])
data.loess.decline.10 = loess(z~x*y)
grid = expand.grid(list(x = seq(6,31,length.out=100), y = seq(min_cor,1,length.out=100)))
zz<-as.matrix(predict(data.loess.decline.10, newdata = grid))
xx<-seq(6,31,length.out=100)
yy<-seq(min_cor,1,length.out=100)
image(xx,yy,zz,axes=F,ylab="",xlab="")
axis(2,las=2,cex.axis=0.9)
axis(1,at=c(6,11,16,21,26,31),cex.axis=0.9)
mtext("Yield (% max. harvest)",3,cex=0.9,line=0.5)
mtext("A",3,cex=1.2,line=0.5,adj=-0.25,font=2)
mtext("Synchrony",2,line=2.5)
image.plot(xx,yy,zz,axes=F,add=T,legend.mar=3,col = rev(viridis(100)))
dev.new(width=6, height=5,new=FALSE)
par(mfrow=c(2,2),bty="o", mar=c(3,3,2.5,5),oma=c(2,2,1,1))#set dimensions to plots
long.data <- as.data.frame(as.table((mean_out[,,2]/max.catch)*100))
x <- as.numeric(paste(long.data[,1]))+0.00000001
y <- as.numeric(paste(long.data[,2]))+0.00000001
z <-as.numeric(long.data[,3])
data.loess.decline.10 = loess(z~x*y)
grid = expand.grid(list(x = seq(6,31,length.out=100), y = seq(min_cor,1,length.out=100)))
zz<-as.matrix(predict(data.loess.decline.10, newdata = grid))
xx<-seq(6,31,length.out=100)
yy<-seq(min_cor,1,length.out=100)
image(xx,yy,zz,axes=F,ylab="",xlab="")
axis(2,las=2,cex.axis=0.9)
axis(1,at=c(6,11,16,21,26,31),cex.axis=0.9)
mtext("Yield (% max. harvest)",3,cex=0.9,line=0.5)
mtext("A",3,cex=1.2,line=0.5,adj=-0.25,font=2)
mtext("Synchrony",2,line=2.5)
image.plot(xx,yy,zz,axes=F,add=T,legend.mar=3,col = rev(viridis(100)))
long.data <- as.data.frame(as.table(1/mean_out[,,6]))
x <- as.numeric(paste(long.data[,1]))+0.00000001
y <- as.numeric(paste(long.data[,2]))+0.00000001
z <-as.numeric(long.data[,3])
data.loess.decline.10 = loess(z~x*y)
grid = expand.grid(list(x = seq(6,31,length.out=100), y = seq(min_cor,1,length.out=100)))
zz<-as.matrix(predict(data.loess.decline.10, newdata = grid))
xx<-seq(6,31,length.out=100)
yy<-seq(min_cor,1,length.out=100)
image(xx,yy,zz,axes=F,ylab="",xlab="")
axis(2,las=2,cex.axis=0.9)
axis(1,at=c(6,11,16,21,26,31),cex.axis=0.9)
mtext("Stability (1/CV)",3,cex=0.9,line=0.5)
mtext("B",3,cex=1.2,line=0.5,adj=-0.25,font=2)
image.plot(xx,yy,zz,axes=F,add=T,legend.mar=3,col = rev(viridis(100)))
long.data <- as.data.frame(as.table(mean_out[,,5]*100))
x <- as.numeric(paste(long.data[,1]))+0.00000001
y <- as.numeric(paste(long.data[,2]))+0.00000001
z <-as.numeric(long.data[,3])
data.loess.decline.10 = loess(z~x*y)
grid = expand.grid(list(x = seq(6,31,length.out=100), y = seq(min_cor,1,length.out=100)))
zz<-as.matrix(predict(data.loess.decline.10, newdata = grid))
zz[zz<0] <- 0
xx<-seq(6,31,length.out=100)
yy<-seq(min_cor,1,length.out=100)
image(xx,yy,zz,axes=F,ylab="",xlab="")
axis(2,las=2,cex.axis=0.9)
axis(1,at=c(6,11,16,21,26,31),cex.axis=0.9)
mtext("  Risk (% stocks extirpated)",3,cex=0.9,line=0.5)
mtext("C",3,cex=1.2,line=0.5,adj=-0.25,font=2)
mtext("Number of populations",1,line=-0.8,outer=T)
mtext("Synchrony",2,line=2.5)
image.plot(xx,yy,zz,axes=F,add=T,legend.mar=3,col = viridis(100))
dev.new(width=6, height=5,new=FALSE)
par(mfrow=c(2,2),bty="o", mar=c(3,3,2.5,5),oma=c(2,2,1,1))#set dimensions to plots
long.data <- as.data.frame(as.table((mean_out[,,2]/max.catch)*100))
x <- as.numeric(paste(long.data[,1]))+0.00000001
y <- as.numeric(paste(long.data[,2]))+0.00000001
z <-as.numeric(long.data[,3])
data.loess.decline.10 = loess(z~x*y)
grid = expand.grid(list(x = seq(6,31,length.out=100), y = seq(min_cor,1,length.out=100)))
zz<-as.matrix(predict(data.loess.decline.10, newdata = grid))
xx<-seq(6,31,length.out=100)
yy<-seq(min_cor,1,length.out=100)
image(xx,yy,zz,axes=F,ylab="",xlab="")
axis(2,las=2,cex.axis=0.9)
axis(1,at=c(6,11,16,21,26,31),cex.axis=0.9)
mtext("Yield (% max. harvest)",3,cex=0.9,line=0.5)
mtext("A",3,cex=1.2,line=0.5,adj=-0.25,font=2)
mtext("Synchrony",2,line=2.5)
image.plot(xx,yy,zz,axes=F,add=T,legend.mar=3,col = rev(viridis(100)),zlim=c(60,100))
# Read in simulations, process
sim_hetP_2 <-readRDS(file = "output/richness_sync_200_0.8_0.6_0010_0.15_0_heteroP2.27Dec2018")
max.catch_hetP_2 <- c(max(sim_hetP_2[1,,2]),max(sim_hetP_2[2,,2]),max(sim_hetP_2[3,,2]),max(sim_hetP_2[4,,2]),max(sim_hetP_2[5,,2]),max(sim_hetP_2[6,,2]),max(sim_hetP_2[7,,2]),max(sim_hetP_2[8,,2]),max(sim_hetP_2[9,,2]),max(sim_hetP_2[10,,2]))
max.catch_hetP_2 <- cbind(max.catch_hetP_2,max.catch_hetP_2,max.catch_hetP_2,max.catch_hetP_2,max.catch_hetP_2,max.catch_hetP_2,max.catch_hetP_2,max.catch_hetP_2,max.catch_hetP_2,max.catch_hetP_2)
sim_hetP_8 <-readRDS(file = "output/richness_sync_200_0.8_0.6_0010_0.15_0_heteroP8.27Dec2018")
max.catch_hetP_8 <- c(max(sim_hetP_8[1,,2]),max(sim_hetP_8[2,,2]),max(sim_hetP_8[3,,2]),max(sim_hetP_8[4,,2]),max(sim_hetP_8[5,,2]),max(sim_hetP_8[6,,2]),max(sim_hetP_8[7,,2]),max(sim_hetP_8[8,,2]),max(sim_hetP_8[9,,2]),max(sim_hetP_8[10,,2]))
max.catch_hetP_8 <- cbind(max.catch_hetP_8,max.catch_hetP_8,max.catch_hetP_8,max.catch_hetP_8,max.catch_hetP_8,max.catch_hetP_8,max.catch_hetP_8,max.catch_hetP_8,max.catch_hetP_8,max.catch_hetP_8)
sim_hetP_6 <-readRDS(file = "output/richness_sync_200_0.8_0.6_0010_0.15_0_heteroP6.27Dec2018")
max.catch_hetP_6 <- c(max(sim_hetP_6[1,,2]),max(sim_hetP_6[2,,2]),max(sim_hetP_6[3,,2]),max(sim_hetP_6[4,,2]),max(sim_hetP_6[5,,2]),max(sim_hetP_6[6,,2]),max(sim_hetP_6[7,,2]),max(sim_hetP_6[8,,2]),max(sim_hetP_6[9,,2]),max(sim_hetP_6[10,,2]))
max.catch_hetP_6 <- cbind(max.catch_hetP_6,max.catch_hetP_6,max.catch_hetP_6,max.catch_hetP_6,max.catch_hetP_6,max.catch_hetP_6,max.catch_hetP_6,max.catch_hetP_6,max.catch_hetP_6,max.catch_hetP_6)
min_cor<-0
dev.new(width=8, height=10,new=FALSE)
# Set up plotting region
m <- rbind(
cbind(0.05,0.33,0.7,1),
cbind(0.33,0.61,0.7,1),
cbind(0.61,0.95,0.7,1),
cbind(0.05,0.33,0.4,0.7),
cbind(0.33,0.61,0.4,0.7),
cbind(0.61,0.95,0.4,0.7),
cbind(0.05,0.33,0.1,0.4),
cbind(0.33,0.61,0.1,0.4),
cbind(0.61,0.95,0.1,0.4),
cbind(0,1,0,1)
)
split.screen(m)
# ROW 1: Yield
screen(1)
par(mar = c(1,1.5,1,1))
long.data <- as.data.frame(as.table((sim_hetP_2[,,2]/max.catch_hetP_2)*100))
x <- as.numeric(paste(long.data[,1]))+0.00000001
y <- as.numeric(paste(long.data[,2]))+0.00000001
z <-as.numeric(long.data[,3])
data.loess.decline.10 = loess(z~x*y)
grid = expand.grid(list(x = seq(6,31,length.out=100), y = seq(min_cor,1,length.out=100)))
zz<-as.matrix(predict(data.loess.decline.10, newdata = grid))
xx<-seq(6,31,length.out=100)
yy<-seq(min_cor,1,length.out=100)
image(xx,yy,zz,axes=F,ylab="",xlab="",col = rev(viridis(100)), zlim=c(60,100))
axis(2,las=2,cex.axis=0.9)
axis(1,at=c(6,11,16,21,26,31),cex.axis=0.9,labels = F)
mtext("Var. in productivity = low",3,line=0, cex=0.9)
screen(2)
par(mar = c(1,1.5,1,1))
long.data <- as.data.frame(as.table((sim_hetP_6[,,2]/max.catch_hetP_6*100)))
x <- as.numeric(paste(long.data[,1]))+0.00000001
y <- as.numeric(paste(long.data[,2]))+0.00000001
z <-as.numeric(long.data[,3])
data.loess.decline.10 = loess(z~x*y)
grid = expand.grid(list(x = seq(6,31,length.out=100), y = seq(min_cor,1,length.out=100)))
zz<-as.matrix(predict(data.loess.decline.10, newdata = grid))
xx<-seq(6,31,length.out=100)
yy<-seq(min_cor,1,length.out=100)
image(xx,yy,zz,axes=F,ylab="",xlab="",col = rev(viridis(100)), zlim=c(60,100))
axis(2,las=2,cex.axis=0.9,labels = F)
axis(1,at=c(6,11,16,21,26,31),cex.axis=0.9,labels = F)
mtext("Var. in productivity = medium",3,line=0, cex=0.9)
screen(3)
par (mar=c(1,1.5,1,4))
long.data <- as.data.frame(as.table((sim_hetP_8[,,2]/max.catch_hetP_8*100)))
x <- as.numeric(paste(long.data[,1]))+0.00000001
y <- as.numeric(paste(long.data[,2]))+0.00000001
z <-as.numeric(long.data[,3])
data.loess.decline.10 = loess(z~x*y)
grid = expand.grid(list(x = seq(6,31,length.out=100), y = seq(min_cor,1,length.out=100)))
zz<-as.matrix(predict(data.loess.decline.10, newdata = grid))
xx<-seq(6,31,length.out=100)
yy<-seq(min_cor,1,length.out=100)
image(xx,yy,zz,axes=F,ylab="",xlab="")
mtext("Yield (% of maximum)",4,line=4)
mtext("Var. in productivity = high",3,line=0, cex=0.9)
axis(2,las=2,cex.axis=0.9,labels = F)
axis(1,at=c(6,11,16,21,26,31),cex.axis=0.9,labels = F)
image.plot(xx,yy,zz,axes=F,add=T,legend.mar=3,col = rev(viridis(100)), zlim=c(60,100))
# ROW 2: Stability
screen(4)
par(mar = c(1,1.5,1,1))
long.data <- as.data.frame(as.table(1/sim_hetP_2[,,6]))
x <- as.numeric(paste(long.data[,1]))+0.00000001
y <- as.numeric(paste(long.data[,2]))+0.00000001
z <-as.numeric(long.data[,3])
data.loess.decline.10 = loess(z~x*y)
grid = expand.grid(list(x = seq(6,31,length.out=100), y = seq(min_cor,1,length.out=100)))
zz<-as.matrix(predict(data.loess.decline.10, newdata = grid))
xx<-seq(6,31,length.out=100)
yy<-seq(min_cor,1,length.out=100)
image(xx,yy,zz,axes=F,ylab="",xlab="",col = rev(viridis(100)),zlim=c(0.75,2.6))
mtext("Synchrony",2,line=2.5)
axis(2,las=2,cex.axis=0.9)
axis(1,at=c(6,11,16,21,26,31),cex.axis=0.9,labels = F)
screen(5)
par(mar = c(1,1.5,1,1))
long.data <- as.data.frame(as.table(1/sim_hetP_6[,,6]))
x <- as.numeric(paste(long.data[,1]))+0.00000001
y <- as.numeric(paste(long.data[,2]))+0.00000001
z <-as.numeric(long.data[,3])
data.loess.decline.10 = loess(z~x*y)
grid = expand.grid(list(x = seq(6,31,length.out=100), y = seq(min_cor,1,length.out=100)))
zz<-as.matrix(predict(data.loess.decline.10, newdata = grid))
xx<-seq(6,31,length.out=100)
yy<-seq(min_cor,1,length.out=100)
image(xx,yy,zz,axes=F,ylab="",xlab="",col = rev(viridis(100)),zlim=c(0.75,2.6))
axis(2,las=2,cex.axis=0.9,labels = F)
axis(1,at=c(6,11,16,21,26,31),cex.axis=0.9,labels = F)
screen(6)
par (mar=c(1,1.5,1,4))
long.data <- as.data.frame(as.table(1/sim_hetP_8[,,6]))
x <- as.numeric(paste(long.data[,1]))+0.00000001
y <- as.numeric(paste(long.data[,2]))+0.00000001
z <-as.numeric(long.data[,3])
data.loess.decline.10 = loess(z~x*y)
grid = expand.grid(list(x = seq(6,31,length.out=100), y = seq(min_cor,1,length.out=100)))
zz<-as.matrix(predict(data.loess.decline.10, newdata = grid))
xx<-seq(6,31,length.out=100)
yy<-seq(min_cor,1,length.out=100)
image(xx,yy,zz,axes=F,ylab="",xlab="",col = viridis(100))
mtext("Catch stability (1/CV)",4,line=4)
axis(2,las=2,cex.axis=0.9,labels = F)
axis(1,at=c(6,11,16,21,26,31),cex.axis=0.9,labels = F)
image.plot(xx,yy,zz,axes=F,add=T,legend.mar=3,col = rev(viridis(100)),zlim=c(0.75,2.6))
# ROW 3: Risk
screen(7)
par(mar = c(1,1.5,1,1))
long.data <- as.data.frame(as.table(sim_hetP_2[,,5]*100))
x <- as.numeric(paste(long.data[,1]))+0.00000001
y <- as.numeric(paste(long.data[,2]))+0.00000001
z <-as.numeric(long.data[,3])
data.loess.decline.10 = loess(z~x*y)
grid = expand.grid(list(x = seq(6,31,length.out=100), y = seq(min_cor,1,length.out=100)))
zz<-as.matrix(predict(data.loess.decline.10, newdata = grid))
zz[zz<0] <- 0
xx<-seq(6,31,length.out=100)
yy<-seq(min_cor,1,length.out=100)
image(xx,yy,zz,axes=F,ylab="",xlab="",col = viridis(100), zlim=c(0,25))
axis(2,las=2,cex.axis=0.9)
axis(1,at=c(6,11,16,21,26,31),cex.axis=0.9)
screen(8)
par(mar = c(1,1.5,1,1))
long.data <- as.data.frame(as.table(sim_hetP_6[,,5]*100))
x <- as.numeric(paste(long.data[,1]))+0.00000001
y <- as.numeric(paste(long.data[,2]))+0.00000001
z <-as.numeric(long.data[,3])
data.loess.decline.10 = loess(z~x*y)
grid = expand.grid(list(x = seq(6,31,length.out=100), y = seq(min_cor,1,length.out=100)))
zz<-as.matrix(predict(data.loess.decline.10, newdata = grid))
zz[zz<0] <- 0
xx<-seq(6,31,length.out=100)
yy<-seq(min_cor,1,length.out=100)
image(xx,yy,zz,axes=F,ylab="",xlab="",col = viridis(100), zlim=c(0,25))
axis(2,las=2,cex.axis=0.9,labels = F)
axis(1,at=c(6,11,16,21,26,31),cex.axis=0.9)
mtext("Richness (no. of populations)",1,line=2.5)
screen(9)
par (mar=c(1,1.5,1,4))
long.data <- as.data.frame(as.table(sim_hetP_8[,,5]*100))
x <- as.numeric(paste(long.data[,1]))+0.00000001
y <- as.numeric(paste(long.data[,2]))+0.00000001
z <-as.numeric(long.data[,3])
data.loess.decline.10 = loess(z~x*y)
grid = expand.grid(list(x = seq(6,31,length.out=100), y = seq(min_cor,1,length.out=100)))
zz<-as.matrix(predict(data.loess.decline.10, newdata = grid))
zz[zz<0] <- 0
xx<-seq(6,31,length.out=100)
yy<-seq(min_cor,1,length.out=100)
image(xx,yy,zz,axes=F,ylab="",xlab="")
mtext("Risk (% stocks ext.)",4,line=4)
axis(2,las=2,cex.axis=0.9,labels = F)
axis(1,at=c(6,11,16,21,26,31),cex.axis=0.9)
image.plot(xx,yy,zz,axes=F,add=T,legend.mar=3,col = viridis(100), zlim=c(0,25))
indexx<- 90 # set index (or "slice"); columns are synchrony and rows are heterogenity in productivity
colors <- viridis(5)
risk_sims <-readRDS(file = "output/mgmt_risk_sims.100.phi_0.8.Rho_0.6.logFE_0.1.OU_0.Dec282018")
dev.new(width=8, height=4,new=FALSE)
par(mfrow=c(1,2),bty="o", mar=c(2,2,2,2),oma=c(3,2,0,0))#set dimensions to plots
long_sims <- round(risk_sims, digits = 2)
sims_out <- subset(long_sims, control == 0 & MSY == 1)
x <- as.numeric(paste(sims_out[,1]))
y <- as.numeric(paste(sims_out[,2]))
z <-as.numeric(sims_out[,3]*100)
data.loess= loess(z~x*y)
grid = expand.grid(list(x = seq(0,1,length.out=100), y = seq(min_cor,1,length.out=100)))
ext<-as.matrix(predict(data.loess, newdata = grid))
ext[ext<0]<-0
x <- as.numeric(paste(sims_out[,1]))+0.00000001
y <- as.numeric(paste(sims_out[,2]))+0.00000001
z <-as.numeric(1/sims_out[,4])
data.loess = loess(z~x*y)
grid = expand.grid(list(x = seq(0,1,length.out=100), y = seq(min_cor,1,length.out=100)))
stability<-as.matrix(predict(data.loess, newdata = grid))
plot(stability[indexx,], ext[indexx,],col=colors[5],type="l",lwd=3,ylim=c(0,25),xlim=c(0.8,3.1),yaxt="n",ylab="Risk (% extirpated)",xlab="Stability (1/CV)")
axis(2,las=2)
mtext("Risk (% extirpated)",2,line=2.5)
sims_out <- subset(long_sims, control == 0.12 & MSY == 1)
x <- as.numeric(paste(sims_out[,1]))
y <- as.numeric(paste(sims_out[,2]))
z <-as.numeric(sims_out[,3]*100)
data.loess= loess(z~x*y)
grid = expand.grid(list(x = seq(0,1,length.out=100), y = seq(min_cor,1,length.out=100)))
ext<-as.matrix(predict(data.loess, newdata = grid))
ext[ext<0]<-0
x <- as.numeric(paste(sims_out[,1]))+0.00000001
y <- as.numeric(paste(sims_out[,2]))+0.00000001
z <-as.numeric(1/sims_out[,4])
data.loess = loess(z~x*y)
grid = expand.grid(list(x = seq(0,1,length.out=100), y = seq(min_cor,1,length.out=100)))
stability<-as.matrix(predict(data.loess, newdata = grid))
points(stability[indexx,], ext[indexx,],col=colors[4],type="l",lwd=3)
sims_out <- subset(long_sims, control == 0.25 & MSY == 1)
x <- as.numeric(paste(sims_out[,1]))
y <- as.numeric(paste(sims_out[,2]))
z <-as.numeric(sims_out[,3]*100)
data.loess= loess(z~x*y)
grid = expand.grid(list(x = seq(0,1,length.out=100), y = seq(min_cor,1,length.out=100)))
ext<-as.matrix(predict(data.loess, newdata = grid))
ext[ext<0]<-0
x <- as.numeric(paste(sims_out[,1]))+0.00000001
y <- as.numeric(paste(sims_out[,2]))+0.00000001
z <-as.numeric(1/sims_out[,4])
data.loess = loess(z~x*y)
grid = expand.grid(list(x = seq(0,1,length.out=100), y = seq(min_cor,1,length.out=100)))
stability<-as.matrix(predict(data.loess, newdata = grid))
points(stability[indexx,], ext[indexx,],col=colors[3],type="l",lwd=3)
sims_out <- subset(long_sims, control == 0.5 & MSY == 1)
x <- as.numeric(paste(sims_out[,1]))
y <- as.numeric(paste(sims_out[,2]))
z <-as.numeric(sims_out[,3]*100)
data.loess= loess(z~x*y)
grid = expand.grid(list(x = seq(0,1,length.out=100), y = seq(min_cor,1,length.out=100)))
ext<-as.matrix(predict(data.loess, newdata = grid))
x <- as.numeric(paste(sims_out[,1]))+0.00000001
y <- as.numeric(paste(sims_out[,2]))+0.00000001
z <-as.numeric(1/sims_out[,4])
data.loess = loess(z~x*y)
grid = expand.grid(list(x = seq(0,1,length.out=100), y = seq(min_cor,1,length.out=100)))
stability<-as.matrix(predict(data.loess, newdata = grid))
ext[ext<0]<-0
points(stability[indexx,], ext[indexx,],col=colors[2],type="l",lwd=3)
sims_out <- subset(long_sims, control == 0.75 & MSY == 1)
x <- as.numeric(paste(sims_out[,1]))
y <- as.numeric(paste(sims_out[,2]))
z <-as.numeric(sims_out[,3]*100)
data.loess= loess(z~x*y)
grid = expand.grid(list(x = seq(0,1,length.out=100), y = seq(min_cor,1,length.out=100)))
ext<-as.matrix(predict(data.loess, newdata = grid))
ext[ext<0]<-0
x <- as.numeric(paste(sims_out[,1]))+0.00000001
y <- as.numeric(paste(sims_out[,2]))+0.00000001
z <-as.numeric(1/sims_out[,4])
data.loess = loess(z~x*y)
grid = expand.grid(list(x = seq(0,1,length.out=100), y = seq(min_cor,1,length.out=100)))
stability<-as.matrix(predict(data.loess, newdata = grid))
points(stability[indexx,], ext[indexx,],col=colors[1],type="l",lwd=3)
legend(2,24,c("0","0.125","0.25","0.5","0.75"),lwd=3,lty=1,col=c(colors[5],colors[4],colors[3],colors[2],colors[1]),cex=0.8, bty="n")
text(2.5,24,"Mgmt. control (C*)",cex=0.8)
mtext("A",3,line=0.2,adj=-0.1,font=2,cex=1.3)
####
sims_out <- subset(long_sims, control == 0 & MSY == 1)
x <- as.numeric(paste(sims_out[,1]))
y <- as.numeric(paste(sims_out[,2]))
z <-as.numeric(sims_out[,3]*100)
data.loess= loess(z~x*y)
grid = expand.grid(list(x = seq(0,1,length.out=100), y = seq(min_cor,1,length.out=100)))
ext<-as.matrix(predict(data.loess, newdata = grid))
ext[ext<0]<-0
x <- as.numeric(paste(sims_out[,1]))+0.00000001
y <- as.numeric(paste(sims_out[,2]))+0.00000001
z <-as.numeric(1/sims_out[,4])
data.loess = loess(z~x*y)
grid = expand.grid(list(x = seq(0,1,length.out=100), y = seq(min_cor,1,length.out=100)))
stability<-as.matrix(predict(data.loess, newdata = grid))
plot(stability[indexx,], ext[indexx,],col=colors[5],type="l",lwd=3,ylim=c(0,25),xlim=c(0.8,3.1),yaxt="n",ylab="",xlab="")
axis(2,las=2)
mtext("Stability (1/CV)",1,line=1,outer=T)
mtext("B",3,line=0.2,adj=-0.1,font=2,cex=1.3)
sims_out <- subset(long_sims, control == 0 & MSY == 0.88)
x <- as.numeric(paste(sims_out[,1]))
y <- as.numeric(paste(sims_out[,2]))
z <-as.numeric(sims_out[,3]*100)
data.loess= loess(z~x*y)
grid = expand.grid(list(x = seq(0,1,length.out=100), y = seq(min_cor,1,length.out=100)))
ext<-as.matrix(predict(data.loess, newdata = grid))
ext[ext<0]<-0
x <- as.numeric(paste(sims_out[,1]))+0.00000001
y <- as.numeric(paste(sims_out[,2]))+0.00000001
z <-as.numeric(1/sims_out[,4])
data.loess = loess(z~x*y)
grid = expand.grid(list(x = seq(0,1,length.out=100), y = seq(min_cor,1,length.out=100)))
stability<-as.matrix(predict(data.loess, newdata = grid))
points(stability[indexx,], ext[indexx,],col=colors[4],type="l",lwd=3)
sims_out <- subset(long_sims, control == 0 & MSY == 0.75)
x <- as.numeric(paste(sims_out[,1]))
y <- as.numeric(paste(sims_out[,2]))
z <-as.numeric(sims_out[,3]*100)
data.loess= loess(z~x*y)
grid = expand.grid(list(x = seq(0,1,length.out=100), y = seq(min_cor,1,length.out=100)))
ext<-as.matrix(predict(data.loess, newdata = grid))
ext[ext<0]<-0
x <- as.numeric(paste(sims_out[,1]))+0.00000001
y <- as.numeric(paste(sims_out[,2]))+0.00000001
z <-as.numeric(1/sims_out[,4])
data.loess = loess(z~x*y)
grid = expand.grid(list(x = seq(0,1,length.out=100), y = seq(min_cor,1,length.out=100)))
stability<-as.matrix(predict(data.loess, newdata = grid))
points(stability[indexx,], ext[indexx,],col=colors[3],type="l",lwd=3)
sims_out <- subset(long_sims, control == 0 & MSY == 0.5)
x <- as.numeric(paste(sims_out[,1]))
y <- as.numeric(paste(sims_out[,2]))
z <-as.numeric(sims_out[,3]*100)
data.loess= loess(z~x*y)
grid = expand.grid(list(x = seq(0,1,length.out=100), y = seq(min_cor,1,length.out=100)))
ext<-as.matrix(predict(data.loess, newdata = grid))
x <- as.numeric(paste(sims_out[,1]))+0.00000001
y <- as.numeric(paste(sims_out[,2]))+0.00000001
z <-as.numeric(1/sims_out[,4])
data.loess = loess(z~x*y)
grid = expand.grid(list(x = seq(0,1,length.out=100), y = seq(min_cor,1,length.out=100)))
stability<-as.matrix(predict(data.loess, newdata = grid))
ext[ext<0]<-0
points(stability[indexx,], ext[indexx,],col=colors[2],type="l",lwd=3)
sims_out <- subset(long_sims, control == 0 & MSY == 0.25)
x <- as.numeric(paste(sims_out[,1]))
y <- as.numeric(paste(sims_out[,2]))
z <-as.numeric(sims_out[,3]*100)
data.loess= loess(z~x*y)
grid = expand.grid(list(x = seq(0,1,length.out=100), y = seq(min_cor,1,length.out=100)))
ext<-as.matrix(predict(data.loess, newdata = grid))
x <- as.numeric(paste(sims_out[,1]))+0.00000001
y <- as.numeric(paste(sims_out[,2]))+0.00000001
z <-as.numeric(1/sims_out[,4])
data.loess = loess(z~x*y)
grid = expand.grid(list(x = seq(0,1,length.out=100), y = seq(min_cor,1,length.out=100)))
stability<-as.matrix(predict(data.loess, newdata = grid))
points(stability[indexx,], ext[indexx,],col=colors[1],type="l",lwd=3)
legend(2,24,c("1","0.88","0.75","0.5","0.25"),lwd=3,lty=1,col=c(colors[5],colors[4],colors[3],colors[2],colors[1]),cex=0.8, bty="n")
text(2.5,24,"Risk tolerance (P*)",cex=0.8)
