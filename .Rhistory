HH <-full.sims.top[which(full.sims.top$control=="0"),]
length(HH[,1]<1)
HH[,1]<1
sum(HH[,1]<1)
sum(HH[,1]<1)/length(HH[,1])
sum(HH[,1]<)/length(HH[,1])
sum(HH[,1]<2)/length(HH[,1])
sum(HH[,2]<1)/length(HH[,])
sum(HH[,2]<1)/length(HH[,2])
HH[,2]
sum(HH[,2]<1 & HH[,1]>1)
HH[,1]>1
HH[,2]<1
HH[,2]<1
under.F <- HH[,2]<1
under.F
HH
under.F <- subset(HH,S_Smsy >1 & F_Fmsy <1)
under.F
lengthHH()dimOverfished
dim(Overfished)
Overfished <- subset(HH,S_Smsy >1 & F_Fmsy <1)
Overfished <- subset(HH,S_Smsy >1 & F_Fmsy <1)
dim(Overfished)
dim(Overfished)[1]/dim(HH)[1]
Overfished <- subset(full.sims.top[which(full.sims.top$control=="0"),,S_Smsy >1 & F_Fmsy <1)
Overfished <- subset(full.sims.top[which(full.sims.top$control=="0"),],S_Smsy >1 & F_Fmsy <1)
dim(Overfished)[1]/dim(HH)[1]
Overfished <- subset(full.sims.top[which(full.sims.top$control=="0.8"),],S_Smsy >1 & F_Fmsy <1)
dim(Overfished)[1]/dim(HH)[1]
Overfished
Overfished <- subset(full.sims.top[which(full.sims.top$control=="0"),],S_Smsy >1 & F_Fmsy <0.95)
dim(Overfished)[1]/dim(HH)[1]
Overfished <- subset(full.sims.top[which(full.sims.top$control=="0.8"),],S_Smsy >1 & F_Fmsy <0.95)
dim(Overfished)[1]/dim(HH)[1]
Overfished <- subset(full.sims.top[which(full.sims.top$control=="0"),],S_Smsy >1 & F_Fmsy <0.90)
dim(Overfished)[1]/dim(HH)[1]
Overfished <- subset(full.sims.top[which(full.sims.top$control=="0.8"),],S_Smsy >1 & F_Fmsy <0.90)
dim(Overfished)[1]/dim(HH)[1]
exp(7.6)
log(7.6)
exp(2.6)
# define characteristics of population complex
pops <- 12 # of populations (MUST BE EVEN)
max.a <- 7 # maximum productivity
min.a <- 2 # minimum productivity
steps <- 10 # of steps between high and low heterogenity
equ_spw <- 40000 # equilibrium abundance (assumes all pops are the same size)
min_cor <- -0.1 # minimum value of degree of correlation (with 10 pops cannot go lower than ... )
inputs <- hetero_prod_func(pops, max.a, min.a, steps, equ_spw,"No") # generate matrix of alphas and betas
alpha<- inputs$alphas[10,]
beta<- inputs$betas[10,]
Ro <- log(alpha)/beta; sum(Ro)
Smsy <- (1-lambert_W0(exp(1-log(alpha))))/beta
Uopt <- round(0.5* log(alpha)-0.07* log(alpha)^2,digits=2)
ny = 50
phi <- 0.4
rho <- 0.6
Preturn <- c(0,0,1,0)
for.error <- 0
OU <- 0
num.sims <- 10
time_period <- c(48:51)
# high risk, low mgmt control
control <- 0
MSY.add <- 1
sim_output <- matrix(NA,pops,4,dimnames=list(NULL,c("S_Smsy","F_Fmsy","control","risk")))
sim_output.2 <- matrix(NA,pops,4,dimnames=list(NULL,c("S_Smsy","F_Fmsy","control","risk")))
source("MSY_hcr_function.R")
for (i in 1:num.sims){
out <- process(ny, Ro, rho, phi, Preturn, U, alpha, beta, control, MSY.add)
if(i==1){
sim_output[,1] <- apply(out$S[48:51,],c(2),mean)/Smsy
sim_output[,2] <- apply(out$H[48:51,]/out$N[48:51,],c(2),mean)/Uopt
sim_output[,3] <- rep(control,pops)
sim_output[,4] <- rep(MSY.add,pops)
}else{
sim_output.2[,1] <- apply(out$S[48:51,],c(2),mean)/Smsy
sim_output.2[,2] <- apply(out$H[48:51,]/out$N[48:51,],c(2),mean)/Uopt
sim_output.2[,3] <- rep(control,pops)
sim_output.2[,4] <- rep(MSY.add,pops)
sim_output <- rbind(sim_output,sim_output.2)
}
}
full.sims.top <- sim_output
# high risk, high mgmt control
control <- 0.8
MSY.add <- 1
source("MSY_hcr_function.R")
for (i in 1:num.sims){
out <- process(ny, Ro, rho, phi, Preturn, U, alpha, beta, control, MSY.add)
if(i==1){
sim_output[,1] <- apply(out$S[48:51,],c(2),mean)/Smsy
sim_output[,2] <- apply(out$H[48:51,]/out$N[48:51,],c(2),mean)/Uopt
sim_output[,3] <- rep(control,pops)
sim_output[,4] <- rep(MSY.add,pops)
}else{
sim_output.2[,1] <- apply(out$S[48:51,],c(2),mean)/Smsy
sim_output.2[,2] <- apply(out$H[48:51,]/out$N[48:51,],c(2),mean)/Uopt
sim_output.2[,3] <- rep(control,pops)
sim_output.2[,4] <- rep(MSY.add,pops)
sim_output <- rbind(sim_output,sim_output.2)
}
}
full.sims.top <- rbind(full.sims.top,sim_output)
full.sims.top <- as.data.frame(full.sims.top)
full.sims.top[,3] <- as.factor(full.sims.top[,3])
full.sims.top[,4] <- as.factor(full.sims.top[,4])
full.sims.top <- full.sims.top[complete.cases(full.sims.top),]
# low risk, low mgmt control
control <- 0
MSY.add <- 0.5
sim_output <- matrix(NA,pops,4,dimnames=list(NULL,c("S_Smsy","F_Fmsy","control","risk")))
sim_output.2 <- matrix(NA,pops,4,dimnames=list(NULL,c("S_Smsy","F_Fmsy","control","risk")))
source("MSY_hcr_function.R")
for (i in 1:num.sims){
out <- process(ny, Ro, rho, phi, Preturn, U, alpha, beta, control, MSY.add)
if(i==1){
sim_output[,1] <- apply(out$S[48:51,],c(2),mean)/Smsy
sim_output[,2] <- apply(out$H[48:51,]/out$N[48:51,],c(2),mean)/Uopt
sim_output[,3] <- rep(control,pops)
sim_output[,4] <- rep(MSY.add,pops)
}else{
sim_output.2[,1] <- apply(out$S[48:51,],c(2),mean)/Smsy
sim_output.2[,2] <- apply(out$H[48:51,]/out$N[48:51,],c(2),mean)/Uopt
sim_output.2[,3] <- rep(control,pops)
sim_output.2[,4] <- rep(MSY.add,pops)
sim_output <- rbind(sim_output,sim_output.2)
}
}
full.sims.bottom <- sim_output
# low risk, high mgmt control
control <- 0.8
MSY.add <- 0.5
source("MSY_hcr_function.R")
for (i in 1:num.sims){
out <- process(ny, Ro, rho, phi, Preturn, U, alpha, beta, control, MSY.add)
if(i==1){
sim_output[,1] <- apply(out$S[48:51,],c(2),mean)/Smsy
sim_output[,2] <- apply(out$H[48:51,]/out$N[48:51,],c(2),mean)/Uopt
sim_output[,3] <- rep(control,pops)
sim_output[,4] <- rep(MSY.add,pops)
}else{
sim_output.2[,1] <- apply(out$S[48:51,],c(2),mean)/Smsy
sim_output.2[,2] <- apply(out$H[48:51,]/out$N[48:51,],c(2),mean)/Uopt
sim_output.2[,3] <- rep(control,pops)
sim_output.2[,4] <- rep(MSY.add,pops)
sim_output <- rbind(sim_output,sim_output.2)
}
}
full.sims.bottom <- rbind(full.sims.bottom,sim_output)
full.sims.bottom <- as.data.frame(full.sims.bottom)
full.sims.bottom[,3] <- as.factor(full.sims.bottom[,3])
full.sims.bottom[,4] <- as.factor(full.sims.bottom[,4])
full.sims.bottom <- full.sims.bottom[complete.cases(full.sims.bottom),]
btml <- rbind(full.sims.top[which(full.sims.top$control=="0"),],full.sims.bottom[which(full.sims.bottom$control=="0"),])
btmr <- rbind(full.sims.top[which(full.sims.top$control=="0.8"),],full.sims.bottom[which(full.sims.bottom$control=="0.8"),])
Overfished <- subset(full.sims.top[which(full.sims.top$control=="0"),],S_Smsy >1 & F_Fmsy <0.90)
dim(Overfished)[1]/dim(HH)[1]
Overfished <- subset(full.sims.top[which(full.sims.top$control=="0.8"),],S_Smsy >1 & F_Fmsy <0.90)
dim(Overfished)[1]/dim(HH)[1]
p1 <- ggplot(data = full.sims.top[which(full.sims.top$control=="0"),],aes(S_Smsy, F_Fmsy))+
scale_x_continuous("S/Smsy",limits = c(0,4),position = "top")+
scale_y_continuous("F/Fmsy",limits = c(0,4))+
geom_vline(xintercept=1)+
geom_hline(yintercept=1)+
theme_bw()+
theme(panel.background = element_blank(),panel.grid = element_blank())+
geom_point(color="blue",fill='blue',size=2,alpha=0.65,shape=16)+
annotate("text", x=2.5, y=4,   label= "Mang. control = Low",size=3) +
annotate("text", x=2.5, y=3.65, label= "Risk tolerance = High",size=3)
p2 <- ggplot(data = full.sims.top[which(full.sims.top$control=="0.8"),],aes(S_Smsy, F_Fmsy))+
scale_x_continuous("S/Smsy",limits = c(0,4),position = "top")+
scale_y_continuous("",limits = c(0,4),labels = NULL)+
geom_vline(xintercept=1)+
geom_hline(yintercept=1)+
theme_bw()+
theme(panel.background = element_blank(),panel.grid = element_blank())+
geom_point(color='green',fill='green',size=2,alpha=0.45,shape=16)+
annotate("text", x=2.5, y=4,   label= "Mang. control = High",size=3) +
annotate("text", x=2.5, y=3.65, label= "Risk tolerance = High",size=3)
p3 <- ggplot() +
geom_density(data=full.sims.top, aes(x=F_Fmsy, group=control,fill=control),alpha=0.65, adjust=6)+
scale_fill_manual(values=c("blue", "green"))+
coord_flip()+
scale_x_continuous("",limits = c(-0.3,4),position = "top",labels=NULL)+
theme(panel.background = element_blank(),axis.text = element_blank(), axis.ticks=element_blank(),axis.title=element_blank())+
theme(legend.position="none")+
geom_vline(xintercept=1)
p4 <- ggplot(data = full.sims.bottom[which(full.sims.bottom$control=="0"),],aes(S_Smsy, F_Fmsy))+
scale_x_continuous("",limits = c(0,4),labels = NULL)+
scale_y_continuous("F/Fmsy",limits = c(0,4))+
geom_vline(xintercept=1)+
geom_hline(yintercept=1)+
theme_bw()+
theme(panel.background = element_blank(),panel.grid = element_blank())+
geom_point(color='red',fill='red',size=2,alpha=0.65,shape=16) +
annotate("text", x=2.5, y=4,   label= "Mang. control = Low",size=3) +
annotate("text", x=2.5, y=3.65, label= "Risk tolerance = Low",size=3)
p5 <- ggplot( data = full.sims.bottom[which(full.sims.bottom$control=="0.8"),],aes(S_Smsy, F_Fmsy))+
scale_x_continuous("",limits = c(0,4),labels = NULL)+
scale_y_continuous("",limits = c(0,4),labels = NULL)+
geom_vline(xintercept=1)+
geom_hline(yintercept=1)+
theme_bw()+
theme(panel.background = element_blank(),panel.grid = element_blank())+
geom_point(color='black',fill='black',size=2,alpha=0.65,shape=16) +
annotate("text", x=2.5, y=4,   label= "Mgmt. control = High",size=3) +
annotate("text", x=2.5, y=3.65, label= "Risk tolerance = Low",size=3)
p6 <- ggplot() +
geom_density(data=full.sims.bottom, aes(x=F_Fmsy, group=control,fill=control),alpha=0.65, adjust=6)+
scale_fill_manual(values=c("red", "black"))+
coord_flip()+
scale_x_continuous(limits = c(-0.3,4))+
theme(panel.background = element_blank(),axis.text = element_blank(), axis.ticks=element_blank(),axis.title=element_blank())+
theme(legend.position="none")+
geom_vline(xintercept=1)
p7 <- ggplot() +
geom_density(data=btml, aes(x=S_Smsy, group=risk,fill=risk),alpha=0.65, adjust=2)+
scale_fill_manual(values=c("blue", "red"))+
scale_x_continuous(limits = c(-0.25,4.2))+
theme(panel.background = element_blank(),axis.text = element_blank(), axis.ticks=element_blank(),axis.title=element_blank())+
theme(legend.position="none")+
geom_vline(xintercept=1)+
scale_y_reverse()
p8 <- ggplot() +
geom_density(data=btmr, aes(x=S_Smsy, group=risk,fill=risk),alpha=0.65, adjust=6)+
scale_fill_manual(values=c("green", "black"))+
scale_x_continuous(limits = c(-0.25,4))+
theme(panel.background = element_blank(),axis.text = element_blank(), axis.ticks=element_blank(),axis.title=element_blank())+
theme(legend.position="none")+
geom_vline(xintercept=1)+
scale_y_reverse()
grid.arrange(p1, p2,p3,p4, p5, p6,p7, p8, nrow = 3)
Overfished <- subset(full.sims.top[which(full.sims.top$control=="0"),],S_Smsy >1 & F_Fmsy <0.90)
dim(Overfished)[1]/dim(HH)[1]
Overfished <- subset(full.sims.top[which(full.sims.top$control=="0.8"),],S_Smsy >1 & F_Fmsy <0.90)
dim(Overfished)[1]/dim(HH)[1]
p1 <- ggplot(data = full.sims.top[which(full.sims.top$control=="0"),],aes(S_Smsy, F_Fmsy))+
scale_x_continuous("S/Smsy",limits = c(0,4),position = "top")+
scale_y_continuous("F/Fmsy",limits = c(0,4))+
geom_vline(xintercept=1)+
geom_hline(yintercept=1)+
theme_bw()+
theme(panel.background = element_blank(),panel.grid = element_blank())+
geom_point(color="blue",fill='blue',size=2,alpha=0.65,shape=16)+
annotate("text", x=2.5, y=4,   label= "Mang. control = Low",size=3) +
annotate("text", x=2.5, y=3.65, label= "Risk tolerance = High",size=3)
p2 <- ggplot(data = full.sims.top[which(full.sims.top$control=="0.8"),],aes(S_Smsy, F_Fmsy))+
scale_x_continuous("S/Smsy",limits = c(0,4),position = "top")+
scale_y_continuous("",limits = c(0,4),labels = NULL)+
geom_vline(xintercept=1)+
geom_hline(yintercept=1)+
theme_bw()+
theme(panel.background = element_blank(),panel.grid = element_blank())+
geom_point(color='green',fill='green',size=2,alpha=0.45,shape=16)+
annotate("text", x=2.5, y=4,   label= "Mang. control = High",size=3) +
annotate("text", x=2.5, y=3.65, label= "Risk tolerance = High",size=3)
p3 <- ggplot() +
geom_density(data=full.sims.top, aes(x=F_Fmsy, group=control,fill=control),alpha=0.65, adjust=2)+
scale_fill_manual(values=c("blue", "green"))+
coord_flip()+
scale_x_continuous("",limits = c(-0.3,4),position = "top",labels=NULL)+
theme(panel.background = element_blank(),axis.text = element_blank(), axis.ticks=element_blank(),axis.title=element_blank())+
theme(legend.position="none")+
geom_vline(xintercept=1)
p4 <- ggplot(data = full.sims.bottom[which(full.sims.bottom$control=="0"),],aes(S_Smsy, F_Fmsy))+
scale_x_continuous("",limits = c(0,4),labels = NULL)+
scale_y_continuous("F/Fmsy",limits = c(0,4))+
geom_vline(xintercept=1)+
geom_hline(yintercept=1)+
theme_bw()+
theme(panel.background = element_blank(),panel.grid = element_blank())+
geom_point(color='red',fill='red',size=2,alpha=0.65,shape=16) +
annotate("text", x=2.5, y=4,   label= "Mang. control = Low",size=3) +
annotate("text", x=2.5, y=3.65, label= "Risk tolerance = Low",size=3)
p5 <- ggplot( data = full.sims.bottom[which(full.sims.bottom$control=="0.8"),],aes(S_Smsy, F_Fmsy))+
scale_x_continuous("",limits = c(0,4),labels = NULL)+
scale_y_continuous("",limits = c(0,4),labels = NULL)+
geom_vline(xintercept=1)+
geom_hline(yintercept=1)+
theme_bw()+
theme(panel.background = element_blank(),panel.grid = element_blank())+
geom_point(color='black',fill='black',size=2,alpha=0.65,shape=16) +
annotate("text", x=2.5, y=4,   label= "Mgmt. control = High",size=3) +
annotate("text", x=2.5, y=3.65, label= "Risk tolerance = Low",size=3)
p6 <- ggplot() +
geom_density(data=full.sims.bottom, aes(x=F_Fmsy, group=control,fill=control),alpha=0.65, adjust=2)+
scale_fill_manual(values=c("red", "black"))+
coord_flip()+
scale_x_continuous(limits = c(-0.3,4))+
theme(panel.background = element_blank(),axis.text = element_blank(), axis.ticks=element_blank(),axis.title=element_blank())+
theme(legend.position="none")+
geom_vline(xintercept=1)
p7 <- ggplot() +
geom_density(data=btml, aes(x=S_Smsy, group=risk,fill=risk),alpha=0.65, adjust=2)+
scale_fill_manual(values=c("blue", "red"))+
scale_x_continuous(limits = c(-0.25,4.2))+
theme(panel.background = element_blank(),axis.text = element_blank(), axis.ticks=element_blank(),axis.title=element_blank())+
theme(legend.position="none")+
geom_vline(xintercept=1)+
scale_y_reverse()
p8 <- ggplot() +
geom_density(data=btmr, aes(x=S_Smsy, group=risk,fill=risk),alpha=0.65, adjust=2)+
scale_fill_manual(values=c("green", "black"))+
scale_x_continuous(limits = c(-0.25,4))+
theme(panel.background = element_blank(),axis.text = element_blank(), axis.ticks=element_blank(),axis.title=element_blank())+
theme(legend.position="none")+
geom_vline(xintercept=1)+
scale_y_reverse()
grid.arrange(p1, p2,p3,p4, p5, p6,p7, p8, nrow = 3)
ggplot() +
geom_density(data=btml, aes(x=S_Smsy, group=risk,fill=risk),alpha=0.65, adjust=1)+
scale_fill_manual(values=c("blue", "red"))+
scale_x_continuous(limits = c(-0.25,4.2))+
theme(panel.background = element_blank(),axis.text = element_blank(), axis.ticks=element_blank(),axis.title=element_blank())+
theme(legend.position="none")+
geom_vline(xintercept=1)+
scale_y_reverse()
dev.new(width=6, height=6,new=FALSE)
grid.arrange(p1, p2,p3,p4, p5, p6,p7, p8, nrow = 3)
jpeg("figures/fig_2_kobe_10sims_0.6_0.8_0010.jpeg",width=6, height=6, units="in",res=800)
#dev.new(width=6, height=6,new=FALSE)
grid.arrange(p1, p2,p3,p4, p5, p6,p7, p8, nrow = 3)
dev.off()
p1 <- ggplot(data = full.sims.top[which(full.sims.top$control=="0"),],aes(S_Smsy, F_Fmsy))+
scale_x_continuous("S/Smsy",limits = c(0,4),position = "top")+
scale_y_continuous("F/Fmsy",limits = c(0,4))+
geom_vline(xintercept=1)+
geom_hline(yintercept=1)+
theme_bw()+
theme(panel.background = element_blank(),panel.grid = element_blank())+
geom_point(color="blue",fill='blue',size=2,alpha=0.65,shape=16)+
annotate("text", x=2.5, y=4,   label= "Mang. control = Low",size=2) +
annotate("text", x=2.5, y=3.65, label= "Risk tolerance = High",size=2)
p2 <- ggplot(data = full.sims.top[which(full.sims.top$control=="0.8"),],aes(S_Smsy, F_Fmsy))+
scale_x_continuous("S/Smsy",limits = c(0,4),position = "top")+
scale_y_continuous("",limits = c(0,4),labels = NULL)+
geom_vline(xintercept=1)+
geom_hline(yintercept=1)+
theme_bw()+
theme(panel.background = element_blank(),panel.grid = element_blank())+
geom_point(color='green',fill='green',size=2,alpha=0.45,shape=16)+
annotate("text", x=2.5, y=4,   label= "Mang. control = High",size=2) +
annotate("text", x=2.5, y=3.65, label= "Risk tolerance = High",size=2)
p3 <- ggplot() +
geom_density(data=full.sims.top, aes(x=F_Fmsy, group=control,fill=control),alpha=0.65, adjust=2)+
scale_fill_manual(values=c("blue", "green"))+
coord_flip()+
scale_x_continuous("",limits = c(-0.3,4),position = "top",labels=NULL)+
theme(panel.background = element_blank(),axis.text = element_blank(), axis.ticks=element_blank(),axis.title=element_blank())+
theme(legend.position="none")+
geom_vline(xintercept=1)
p4 <- ggplot(data = full.sims.bottom[which(full.sims.bottom$control=="0"),],aes(S_Smsy, F_Fmsy))+
scale_x_continuous("",limits = c(0,4),labels = NULL)+
scale_y_continuous("F/Fmsy",limits = c(0,4))+
geom_vline(xintercept=1)+
geom_hline(yintercept=1)+
theme_bw()+
theme(panel.background = element_blank(),panel.grid = element_blank())+
geom_point(color='red',fill='red',size=2,alpha=0.65,shape=16) +
annotate("text", x=2.5, y=4,   label= "Mang. control = Low",size=2) +
annotate("text", x=2.5, y=3.65, label= "Risk tolerance = Low",size=2)
p5 <- ggplot( data = full.sims.bottom[which(full.sims.bottom$control=="0.8"),],aes(S_Smsy, F_Fmsy))+
scale_x_continuous("",limits = c(0,4),labels = NULL)+
scale_y_continuous("",limits = c(0,4),labels = NULL)+
geom_vline(xintercept=1)+
geom_hline(yintercept=1)+
theme_bw()+
theme(panel.background = element_blank(),panel.grid = element_blank())+
geom_point(color='black',fill='black',size=2,alpha=0.65,shape=16) +
annotate("text", x=2.5, y=4,   label= "Mgmt. control = High",size=2) +
annotate("text", x=2.5, y=3.65, label= "Risk tolerance = Low",size=2)
p6 <- ggplot() +
geom_density(data=full.sims.bottom, aes(x=F_Fmsy, group=control,fill=control),alpha=0.65, adjust=2)+
scale_fill_manual(values=c("red", "black"))+
coord_flip()+
scale_x_continuous(limits = c(-0.3,4))+
theme(panel.background = element_blank(),axis.text = element_blank(), axis.ticks=element_blank(),axis.title=element_blank())+
theme(legend.position="none")+
geom_vline(xintercept=1)
p7 <- ggplot() +
geom_density(data=btml, aes(x=S_Smsy, group=risk,fill=risk),alpha=0.65, adjust=2)+
scale_fill_manual(values=c("blue", "red"))+
scale_x_continuous(limits = c(-0.25,4.2))+
theme(panel.background = element_blank(),axis.text = element_blank(), axis.ticks=element_blank(),axis.title=element_blank())+
theme(legend.position="none")+
geom_vline(xintercept=1)+
scale_y_reverse()
p8 <- ggplot() +
geom_density(data=btmr, aes(x=S_Smsy, group=risk,fill=risk),alpha=0.65, adjust=2)+
scale_fill_manual(values=c("green", "black"))+
scale_x_continuous(limits = c(-0.25,4))+
theme(panel.background = element_blank(),axis.text = element_blank(), axis.ticks=element_blank(),axis.title=element_blank())+
theme(legend.position="none")+
geom_vline(xintercept=1)+
scale_y_reverse()
jpeg("figures/fig_2_kobe_10sims_0.6_0.8_0010.jpeg",width=6, height=6, units="in",res=800)
#dev.new(width=6, height=6,new=FALSE)
grid.arrange(p1, p2,p3,p4, p5, p6,p7, p8, nrow = 3)
dev.off()
install.packages("ggpubr")
require(ggpubr)
ggarrange(p1, p2,p3,p4, p5, p6,p7, p8, nrow = 3, widths = 1:2)
ggarrange(p1, p2,p3,p4, p5, p6,p7, p8, nrow = 3)
ggarrange(p1, p2,p3,p4, p5, p6,p7, p8, nrow = 3,ncol=3)
ggarrange(p1, p2,p3,p4, p5, p6,p7, p8, nrow = 3,ncol=3,align="v")
ggarrange(p1, p2,p3,p4, p5, p6,p7, p8, nrow = 3,ncol=3,align="v",align="h")
ggarrange(p1, p2,p3,p4, p5, p6,p7, p8, nrow = 3,ncol=3,align=c("v","h"))
ggarrange(p1, p2,p3,p4, p5, p6,p7, p8, nrow = 3,ncol=3,align=c("hv"))
p5 <- ggplot( data = full.sims.bottom[which(full.sims.bottom$control=="0.8"),],aes(S_Smsy, F_Fmsy))+
scale_x_continuous(limits = c(0,4),labels = NULL)+
scale_y_continuous(limits = c(0,4),labels = NULL)+
geom_vline(xintercept=1)+
geom_hline(yintercept=1)+
theme_bw()+
theme(panel.background = element_blank(),panel.grid = element_blank())+
geom_point(color='black',fill='black',size=2,alpha=0.65,shape=16) +
annotate("text", x=2.5, y=4,   label= "Mgmt. control = High",size=2) +
annotate("text", x=2.5, y=3.65, label= "Risk tolerance = Low",size=2)
ggarrange(p1, p2,p3,p4, p5, p6,p7, p8, nrow = 3,ncol=3,align=c("hv"))
Overfished <- subset(full.sims.top[which(full.sims.top$control=="0"),],S_Smsy >1 & F_Fmsy <0.90)
dim(Overfished)[1]/dim(HH)[1]
Overfished <- subset(full.sims.top[which(full.sims.top$control=="0.8"),],S_Smsy >1 & F_Fmsy <0.90)
dim(Overfished)[1]/dim(HH)[1]
p1 <- ggplot(data = full.sims.top[which(full.sims.top$control=="0"),],aes(S_Smsy, F_Fmsy))+
scale_x_continuous("S/Smsy",limits = c(0,4),position = "top")+
scale_y_continuous("F/Fmsy",limits = c(0,4))+
geom_vline(xintercept=1)+
geom_hline(yintercept=1)+
theme_bw()+
theme(panel.background = element_blank(),panel.grid = element_blank())+
geom_point(color="blue",fill='blue',size=2,alpha=0.65,shape=16)+
annotate("text", x=2.5, y=4,   label= "Mang. control = Low",size=2) +
annotate("text", x=2.5, y=3.65, label= "Risk tolerance = High",size=2)
p2 <- ggplot(data = full.sims.top[which(full.sims.top$control=="0.8"),],aes(S_Smsy, F_Fmsy))+
scale_x_continuous("S/Smsy",limits = c(0,4),position = "top")+
scale_y_continuous("",limits = c(0,4),labels = NULL)+
geom_vline(xintercept=1)+
geom_hline(yintercept=1)+
theme_bw()+
theme(panel.background = element_blank(),panel.grid = element_blank())+
geom_point(color='green',fill='green',size=2,alpha=0.45,shape=16)+
annotate("text", x=2.5, y=4,   label= "Mang. control = High",size=2) +
annotate("text", x=2.5, y=3.65, label= "Risk tolerance = High",size=2)
p3 <- ggplot() +
geom_density(data=full.sims.top, aes(x=F_Fmsy, group=control,fill=control),alpha=0.65, adjust=2)+
scale_fill_manual(values=c("blue", "green"))+
coord_flip()+
scale_x_continuous("",limits = c(0,4),position = "top",labels=NULL)+
theme(panel.background = element_blank(),axis.text = element_blank(), axis.ticks=element_blank(),axis.title=element_blank())+
theme(legend.position="none")+
geom_vline(xintercept=1)
p4 <- ggplot(data = full.sims.bottom[which(full.sims.bottom$control=="0"),],aes(S_Smsy, F_Fmsy))+
scale_x_continuous("",limits = c(0,4),labels = NULL)+
scale_y_continuous("F/Fmsy",limits = c(0,4))+
geom_vline(xintercept=1)+
geom_hline(yintercept=1)+
theme_bw()+
theme(panel.background = element_blank(),panel.grid = element_blank())+
geom_point(color='red',fill='red',size=2,alpha=0.65,shape=16) +
annotate("text", x=2.5, y=4,   label= "Mang. control = Low",size=2) +
annotate("text", x=2.5, y=3.65, label= "Risk tolerance = Low",size=2)
p5 <- ggplot( data = full.sims.bottom[which(full.sims.bottom$control=="0.8"),],aes(S_Smsy, F_Fmsy))+
scale_x_continuous("",limits = c(0,4),labels = NULL)+
scale_y_continuous("",limits = c(0,4),labels = NULL)+
geom_vline(xintercept=1)+
geom_hline(yintercept=1)+
theme_bw()+
theme(panel.background = element_blank(),panel.grid = element_blank())+
geom_point(color='black',fill='black',size=2,alpha=0.65,shape=16) +
annotate("text", x=2.5, y=4,   label= "Mgmt. control = High",size=2) +
annotate("text", x=2.5, y=3.65, label= "Risk tolerance = Low",size=2)
p6 <- ggplot() +
geom_density(data=full.sims.bottom, aes(x=F_Fmsy, group=control,fill=control),alpha=0.65, adjust=2)+
scale_fill_manual(values=c("red", "black"))+
coord_flip()+
scale_x_continuous(limits = c(0,4))+
theme(panel.background = element_blank(),axis.text = element_blank(), axis.ticks=element_blank(),axis.title=element_blank())+
theme(legend.position="none")+
geom_vline(xintercept=1)
p7 <- ggplot() +
geom_density(data=btml, aes(x=S_Smsy, group=risk,fill=risk),alpha=0.65, adjust=2)+
scale_fill_manual(values=c("blue", "red"))+
scale_x_continuous(limits = c(0,4.2))+
theme(panel.background = element_blank(),axis.text = element_blank(), axis.ticks=element_blank(),axis.title=element_blank())+
theme(legend.position="none")+
geom_vline(xintercept=1)+
scale_y_reverse()
p8 <- ggplot() +
geom_density(data=btmr, aes(x=S_Smsy, group=risk,fill=risk),alpha=0.65, adjust=2)+
scale_fill_manual(values=c("green", "black"))+
scale_x_continuous(limits = c(0,4))+
theme(panel.background = element_blank(),axis.text = element_blank(), axis.ticks=element_blank(),axis.title=element_blank())+
theme(legend.position="none")+
geom_vline(xintercept=1)+
scale_y_reverse()
ggarrange(p1, p2,p3,p4, p5, p6,p7, p8, nrow = 3,ncol=3,align=c("hv"))
ggplot() +
geom_density(data=btmr, aes(x=S_Smsy, group=risk,fill=risk),alpha=0.65, adjust=2)+
scale_fill_manual(values=c("green", "black"))+
scale_x_continuous(limits = c(0,4))+
theme(panel.background = element_blank())+
theme(legend.position="none")+
geom_vline(xintercept=1)+
scale_y_reverse()
ggarrange(p1, p2,p3,p4, p5, p6,p7, p8, nrow = 3,ncol=3,align=c("hv"),labels = c("A", "B", "C","D","E","F","G","F"))
jpeg("figures/fig_2_kobe_10sims_0.6_0.8_0010.jpeg",width=6, height=6, units="in",res=800)
#dev.new(width=6, height=6,new=FALSE)
#grid.arrange(p1, p2,p3,p4, p5, p6,p7, p8, nrow = 3)
ggarrange(p1, p2,p3,p4, p5, p6,p7, p8, nrow = 3,ncol=3,align=c("hv"),labels = c("A", "B", "C","D","E","F","G","F"))
dev.off()
